// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Comment {
  id        Int       @id @unique @default(autoincrement())
  desc      String?
  createdAt DateTime?
  userId    Int
  postId    Int
  user      User      @relation(fields: [userId], references: [id]) //ASK
  post      Post      @relation(fields: [postId], references: [id], onDelete: Cascade) //ASK
}

model User {
  id            Int            @id @unique @default(autoincrement())
  username      String         @unique
  email         String         @unique
  password      String
  name          String
  coverPic      String?
  profilePic    String?
  city          String?
  website       String?
  posts         Post[] //ASK
  comments      Comment[] //ASK
  likes         Like[]
  followedUsers Relationship[] @relation("FollowedUsers")
  followers     Relationship[] @relation("Followers")
  story         Story[]
}

model Post {
  id        Int       @id @unique @default(autoincrement())
  desc      String?
  img       String?
  createdAt DateTime?
  userId    Int
  user      User      @relation(fields: [userId], references: [id]) //ASK
  comment   Comment[]
  likes     Like[]
}

model Like {
  id     Int  @id @unique @default(autoincrement())
  userId Int
  postId Int
  user   User @relation(fields: [userId], references: [id]) //ASK
  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade) //ASK
}

model Relationship {
  id             Int  @id @unique @default(autoincrement())
  followedUser   User @relation("FollowedUsers", fields: [followedUserId], references: [id])
  followedUserId Int
  followerUser   User @relation("Followers", fields: [followerUserId], references: [id])
  followerUserId Int
}

model Story {
  id     Int    @id @unique @default(autoincrement())
  img    String
  user   User   @relation(fields: [userId], references: [id]) //ASK
  userId Int
}
